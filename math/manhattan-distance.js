"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const make_points_1 = require("./make-points");
/**
 * Gets the Manhattan distance between two points (x1, y1) and (x2, y2);
 * the distance between two points measured along axes at right angles.
 *
 * @param args - Points either in the format [x1, y1, x2, y2],
 * [{x1, y1}, {x1, y2}], or [ [x1, y1], [x1, y2] ].
 * @returns The manhattan distance between the two points.
 */
function manhattanDistance(...args) {
    const points = make_points_1.makePoints(...args);
    const dx = Math.abs(points[0].x - points[1].x);
    const dy = Math.abs(points[0].y - points[1].y);
    return dx + dy;
}
exports.manhattanDistance = manhattanDistance;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFuaGF0dGFuLWRpc3RhbmNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL21hdGgvbWFuaGF0dGFuLWRpc3RhbmNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQ0EsK0NBQTJDO0FBMEMzQzs7Ozs7OztHQU9HO0FBQ0gsU0FBZ0IsaUJBQWlCLENBQUMsR0FBRyxJQUFvQjtJQUNyRCxNQUFNLE1BQU0sR0FBRyx3QkFBVSxDQUFDLEdBQUcsSUFBSSxDQUFDLENBQUM7SUFFbkMsTUFBTSxFQUFFLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUMvQyxNQUFNLEVBQUUsR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBRS9DLE9BQU8sRUFBRSxHQUFHLEVBQUUsQ0FBQztBQUNuQixDQUFDO0FBUEQsOENBT0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJUG9pbnQgfSBmcm9tIFwiLi4vdHlwZXMvcG9pbnRcIjtcbmltcG9ydCB7IG1ha2VQb2ludHMgfSBmcm9tIFwiLi9tYWtlLXBvaW50c1wiO1xuXG4vKipcbiAqIEdldHMgdGhlIE1hbmhhdHRhbiBkaXN0YW5jZSBiZXR3ZWVuIHR3byBwb2ludHMgKHgxLCB5MSkgYW5kICh4MiwgeTIpO1xuICogdGhlIGRpc3RhbmNlIGJldHdlZW4gdHdvIHBvaW50cyBtZWFzdXJlZCBhbG9uZyBheGVzIGF0IHJpZ2h0IGFuZ2xlcy5cbiAqXG4gKiBAcGFyYW0gcG9pbnQxIC0geyB4LCB5IH0gcG9pbnQgMVxuICogQHBhcmFtIHBvaW50MiAtIHsgeCwgeSB9IHBvaW50IDJcbiAqIEByZXR1cm5zIFRoZSBtYW5oYXR0YW4gZGlzdGFuY2UgYmV0d2VlbiB0aGUgdHdvIHBvaW50cy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIG1hbmhhdHRhbkRpc3RhbmNlKHBvaW50MTogSVBvaW50LCBwb2ludDI6IElQb2ludCk6IG51bWJlcjtcblxuLyoqXG4gKiBHZXRzIHRoZSBNYW5oYXR0YW4gZGlzdGFuY2UgYmV0d2VlbiB0d28gcG9pbnRzICh4MSwgeTEpIGFuZCAoeDIsIHkyKTtcbiAqIHRoZSBkaXN0YW5jZSBiZXR3ZWVuIHR3byBwb2ludHMgbWVhc3VyZWQgYWxvbmcgYXhlcyBhdCByaWdodCBhbmdsZXMuXG4gKlxuICogQHBhcmFtIHBvaW50MSAtIFsgeCwgeSBdIHBvaW50IDFcbiAqIEBwYXJhbSBwb2ludDIgLSBbIHgsIHkgXSBwb2ludCAyXG4gKiBAcmV0dXJucyBUaGUgbWFuaGF0dGFuIGRpc3RhbmNlIGJldHdlZW4gdGhlIHR3byBwb2ludHMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBtYW5oYXR0YW5EaXN0YW5jZShcbiAgICBwb2ludDE6IFtudW1iZXIsIG51bWJlcl0sXG4gICAgcG9pbnQyOiBbbnVtYmVyLCBudW1iZXJdLFxuKTogbnVtYmVyO1xuXG4vKipcbiAqIEdldHMgdGhlIE1hbmhhdHRhbiBkaXN0YW5jZSBiZXR3ZWVuIHR3byBwb2ludHMgKHgxLCB5MSkgYW5kICh4MiwgeTIpO1xuICogdGhlIGRpc3RhbmNlIGJldHdlZW4gdHdvIHBvaW50cyBtZWFzdXJlZCBhbG9uZyBheGVzIGF0IHJpZ2h0IGFuZ2xlcy5cbiAqXG4gKiBAcGFyYW0geDEgLSBwb2ludCAxJ3MgeFxuICogQHBhcmFtIHkxIC0gcG9pbnQgMSdzIHlcbiAqIEBwYXJhbSB4MiAtIHBvaW50IDIncyB4XG4gKiBAcGFyYW0geTIgLSBwb2ludCAyJ3MgeVxuICogQHJldHVybnMgVGhlIG1hbmhhdHRhbiBkaXN0YW5jZSBiZXR3ZWVuIHRoZSB0d28gcG9pbnRzLlxuICovXG5leHBvcnQgZnVuY3Rpb24gbWFuaGF0dGFuRGlzdGFuY2UoXG4gICAgeDE6IG51bWJlcixcbiAgICB5MTogbnVtYmVyLFxuICAgIHgyOiBudW1iZXIsXG4gICAgeTI6IG51bWJlcixcbik6IG51bWJlcjtcblxuLyoqXG4gKiBHZXRzIHRoZSBNYW5oYXR0YW4gZGlzdGFuY2UgYmV0d2VlbiB0d28gcG9pbnRzICh4MSwgeTEpIGFuZCAoeDIsIHkyKTtcbiAqIHRoZSBkaXN0YW5jZSBiZXR3ZWVuIHR3byBwb2ludHMgbWVhc3VyZWQgYWxvbmcgYXhlcyBhdCByaWdodCBhbmdsZXMuXG4gKlxuICogQHBhcmFtIGFyZ3MgLSBQb2ludHMgZWl0aGVyIGluIHRoZSBmb3JtYXQgW3gxLCB5MSwgeDIsIHkyXSxcbiAqIFt7eDEsIHkxfSwge3gxLCB5Mn1dLCBvciBbIFt4MSwgeTFdLCBbeDEsIHkyXSBdLlxuICogQHJldHVybnMgVGhlIG1hbmhhdHRhbiBkaXN0YW5jZSBiZXR3ZWVuIHRoZSB0d28gcG9pbnRzLlxuICovXG5leHBvcnQgZnVuY3Rpb24gbWFuaGF0dGFuRGlzdGFuY2UoLi4uYXJnczogQXJyYXk8dW5rbm93bj4pOiBudW1iZXIge1xuICAgIGNvbnN0IHBvaW50cyA9IG1ha2VQb2ludHMoLi4uYXJncyk7XG5cbiAgICBjb25zdCBkeCA9IE1hdGguYWJzKHBvaW50c1swXS54IC0gcG9pbnRzWzFdLngpO1xuICAgIGNvbnN0IGR5ID0gTWF0aC5hYnMocG9pbnRzWzBdLnkgLSBwb2ludHNbMV0ueSk7XG5cbiAgICByZXR1cm4gZHggKyBkeTtcbn1cbiJdfQ==