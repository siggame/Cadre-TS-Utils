"use strict";
/**
 * These are events the server sends to clients.
 * Server ---> Client
 */
Object.defineProperty(exports, "__esModule", { value: true });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VydmVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2NhZHJlL2V2ZW50cy9zZXJ2ZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBOzs7R0FHRyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogVGhlc2UgYXJlIGV2ZW50cyB0aGUgc2VydmVyIHNlbmRzIHRvIGNsaWVudHMuXG4gKiBTZXJ2ZXIgLS0tPiBDbGllbnRcbiAqL1xuXG5pbXBvcnQgeyBJRGVsdGFNZXJnZUNvbnN0YW50cyB9IGZyb20gXCIuLi9kZWx0YS1tZXJnZVwiO1xuaW1wb3J0IHsgRGVsdGEgfSBmcm9tIFwiLi4vZGVsdGFzXCI7XG5pbXBvcnQgeyBJRXZlbnQgfSBmcm9tIFwiLi9ldmVudFwiO1xuXG4vKipcbiAqIFNlbnQgZnJvbSB0aGUgc2VydmVyIHRvIGNsaWVudHMgd2hlbiB0aGUgZ2FtZSBpcyBvdmVyLlxuICpcbiAqIFRoaXMgaXMgYWx3YXlzIHRoZSBmaW5hbCBldmVudCBpbiBhIG5vcm1hbCBnYW1lLlxuICovXG5leHBvcnQgdHlwZSBPdmVyRXZlbnQgPSBJRXZlbnQ8XCJvdmVyXCIsIHtcbiAgICAvKiogQW4gYWJzb2x1dGUgVVJMIHRvIHRoZSBnYW1lbG9nIGFzIEpTT04uICovXG4gICAgZ2FtZWxvZ1VSTDogc3RyaW5nO1xuXG4gICAgLyoqXG4gICAgICogQW4gYWJzb2x1dGUgVVJMIHRvIHRoZSB2aXN1YWxpemVyIHRoYXQgd2lsbCBhdXRvbWF0aWNhbGx5IHBsYXliYWNrIHRoaXNcbiAgICAgKiBnYW1lbG9nLlxuICAgICAqL1xuICAgIHZpc3VhbGl6ZXJVUkw/OiBzdHJpbmc7XG5cbiAgICAvKiogQSBtZXNzYWdlIHRvIHRlbGwgdGhlIGNsaWVudCBhYm91dCB3aHkgdGhlIGdhbWUgaXMgb3Zlci4gKi9cbiAgICBtZXNzYWdlPzogc3RyaW5nO1xufT47XG5cbi8qKlxuICogU2VudCB0byBjbGllbnRzIHdoZW4gdGhlIGdhbWUgaGFzIHN0YXJ0ZWQuIEZvciB0aGUgXCJzdGFydFwiIGV2ZW50LlxuICogQWx3YXlzIHNlbnQgYWZ0ZXIgXCJsb2JiaWVkXCIuXG4gKi9cbmV4cG9ydCB0eXBlIFN0YXJ0RXZlbnQgPSBJRXZlbnQ8XCJzdGFydFwiLCB7XG4gICAgLyoqXG4gICAgICogVGhlIEdhbWVPYmplY3QuaWQgb2YgdGhlIHBsYXllciB0aGV5IGNvbnRyb2wuIElmIHRoZXkgYXJlIGEgc3BlY3RhdG9yXG4gICAgICogdGhpcyB3aWxsIGJlIHVuZGVmaW5lZCwgYXMgdGhleSBoYXZlIG5vIHBsYXllci5cbiAgICAgKi9cbiAgICBwbGF5ZXJJRD86IHN0cmluZztcbn0+O1xuXG4vKipcbiAqIFNlbnQgdG8gY2xpZW50cyB3aGVuIHRoZXkgbmVlZCB0byBydW4gYW4gb3JkZXIgKGZ1bmN0aW9uKS5cbiAqIEZvciB0aGUgXCJvcmRlclwiIGV2ZW50LlxuICovXG5leHBvcnQgdHlwZSBPcmRlckV2ZW50ID0gSUV2ZW50PFwib3JkZXJcIiwge1xuICAgIC8qKiBOYW1lIG9mIHRoZSBmdW5jdGlvbiB0byBleGVjdXRlIG9uIHRoZWlyIEFJLiAqL1xuICAgIG5hbWU6IHN0cmluZztcblxuICAgIC8qKlxuICAgICAqIEJhc2ljYWxseSBhbiBJRCBvZiB0aGUgb3JkZXIgc28gdGhleSBjYW4gdGVsbCB1cyB3aGVuIHRoZXkgZmluaXNoZWQgaXQuXG4gICAgICovXG4gICAgaW5kZXg6IG51bWJlcjtcblxuICAgIC8qKlxuICAgICAqIEFyZ3VtZW50cyB0byB0aGUgb3JkZXIsIGluIG9yZGVyIHRvIGJlIHBhc3NlZCB0byBzYWlkIGZ1bmN0aW9uLlxuICAgICAqXG4gICAgICogQGV4YW1wbGUgW1wiZm9vXCIsIFwiYmFyXCIsIDEzMzddIC0+IGFpLm9yZGVyW25hbWVdKFwiZm9vXCIsIFwiYmFyXCIsIDEzMzcpXG4gICAgICovXG4gICAgYXJnczogQXJyYXk8dW5rbm93bj47XG59PjtcblxuLyoqXG4gKiBTZW50IHRvIGNsaWVudHMgd2hlbiBzb21ldGhpbmcgdGhleSBzZW5kIGdhbWVwbGF5IHdpc2UgaXMgaW52YWxpZC5cbiAqIEZvciB0aGUgXCJpbnZhbGlkXCIgZXZlbnQuXG4gKi9cbmV4cG9ydCB0eXBlIEludmFsaWRFdmVudCA9IElFdmVudDxcImludmFsaWRcIiwge1xuICAgIC8qKiBIdW1hbiByZWFkYWJsZSBtZXNzYWdlIGFzIHRvIHdoeSBpdCBpcyBpbnZhbGlkLiAqL1xuICAgIG1lc3NhZ2U6IHN0cmluZztcblxuICAgIC8qKiBEYXRhIGFib3V0IHdoeSBpdCBpcyBpbnZhbGlkLCBpZiBhbnkuICovXG4gICAgZGF0YT86IHVua25vd247XG59PjtcblxuLyoqXG4gKiBTZW5kIGZyb20gdGhlIHNlcnZlciB0byBhIGNsaWVudCBvbmNlIHRoZXkgYXJlIGluIGEgZ2FtZSBsb2JieSxcbiAqIGJ1dCBiZWZvcmUgYSBnYW1lIHN0YXJ0cy5cbiAqL1xuZXhwb3J0IHR5cGUgTG9iYmllZEV2ZW50ID0gSUV2ZW50PFwibG9iYmllZFwiLCB7XG4gICAgLyoqIFRoZSBhY3R1YWwgbmFtZSAoaWQpIG9mIHRoZSBnYW1lIHlvdSB3aWxsIGJlIHBsYXlpbmcuICovXG4gICAgZ2FtZU5hbWU6IHN0cmluZztcblxuICAgIC8qKiBUaGUgZ2FtZSBzZXNzaW9uIChpZCkgb2YgdGhlIGdhbWUgeW91IHdpbGwgYmUgcGxheWluZy4gKi9cbiAgICBnYW1lU2Vzc2lvbjogc3RyaW5nO1xuXG4gICAgLyoqIENvbnN0YW50cyB1c2VkIHRvIGZhY2lsaXRhdGUgZ2FtZSBJTyBjb21tdW5pY2F0aW9uLiAqL1xuICAgIGNvbnN0YW50czogSURlbHRhTWVyZ2VDb25zdGFudHM7XG59PjtcblxuLyoqXG4gKiBSZXR1cm5lZCB0byBhIGNsaWVudCBvbmNlIHNvbWUgZ2FtZSBsb2dpYyBoYXMgYmVuIFwicmFuXCIgZm9yIGl0LiBUaGUgZGF0YVxuICogaXMgdGhlIHJldHVybiB2YWx1ZSBvZiB0aGF0IHJ1biBldmVudCBzZW50LlxuICovXG5leHBvcnQgdHlwZSBSYW5FdmVudCA9IElFdmVudDxcInJhblwiLCB1bmtub3duPjtcblxuLyoqXG4gKiBUcmlnZ2VycyBhZnRlciBzZXJpYWxpemVkIGdhbWUgbG9naWMgZmluaXNoZWQgYW5kIHRoZSBnYW1lIHN0YXRlIGNoYW5nZWRcbiAqIGluIHNvbWUgd2F5LiBUaGUgcGFydGlhbCBnYW1lIGRlbHRhIGlzIHNlbnQsIGluIGRlbHRhIG1lcmdlIGZvcm1hdC5cbiAqL1xuZXhwb3J0IHR5cGUgRGVsdGFFdmVudCA9IElFdmVudDxcImRlbHRhXCIsIERlbHRhW1wiZ2FtZVwiXT47XG5cbi8qKlxuICogVGhlIHNhbWUgYXMgYSBub3JtYWwgZGVsdGEgZXZlbnQsIGJ1dCB0aGUgZGF0YSBpcyB0aGUgZW50aXJlIGRlbHRhLCBpbnN0ZWFkXG4gKiBvZiBqdXN0IHRoZSBnYW1lIHN0YXRlLiBJbnRlbmRlZCBmb3Igc3BlY3RhdG9ycyB3aG8gd2FudCB0aGUgZW50aXJlXG4gKiBnYW1lbG9nIGluc3RlYWQganVzdCBnYW1lIGRhdGEuXG4gKi9cbmV4cG9ydCB0eXBlIE1ldGFEZWx0YUV2ZW50ID0gSUV2ZW50PFwibWV0YS1kZWx0YVwiLCBEZWx0YT47XG5cbi8qKlxuICogU2VudCBmcm9tIHRoZSBnYW1lIHNlcnZlciB0byBhIHNpbmdsZSBjbGllbnQgb25jZSBhIGdhbWUgYWxpYXMgaGFzIGJlZW5cbiAqIFwibmFtZWRcIiB0byBpdCdzIGdhbWUgbmFtZSAoaWQpXG4gKi9cbmV4cG9ydCB0eXBlIE5hbWVkRXZlbnQgPSBJRXZlbnQ8XCJuYW1lZFwiLCBzdHJpbmc+O1xuXG4vKipcbiAqIFNlbnQgdG8gY2xpZW50cyB3aGVuIHNvbWV0aGluZyBoYXBwZW5zIHRoYXQgaXMgc28gYmFkLCB0aGV5IG11c3QgYmVcbiAqIGZvcmNlZnVsbHkgZGlzY29ubmVjdGVkLiBGb3IgdGhlIFwiZmF0YWxcIiBldmVudC5cbiAqL1xuZXhwb3J0IHR5cGUgRmF0YWxFdmVudCA9IElFdmVudDxcImZhdGFsXCIsIHtcbiAgICAvKipcbiAgICAgKiBNZXNzYWdlIGFib3V0IHdoeSB0aGUgZmF0YWwgZXZlbnQgb2NjdXJyZWQuXG4gICAgICpcbiAgICAgKiBNb3N0IGxpa2VseSBlaXRoZXIgdGhlIGdhbWUgc2VydmVyIGhhZCBhIGZhdGFsIGV4Y2VwdGlvbiBpdCBjb3VsZCBub3RcbiAgICAgKiByZWNvdmVyIGZyb20sIG9yIHRoZSBjbGllbnQgc2VudCBzb21lIHNlcmlvdXNseSBzcG9va3kgZGF0YSB0aGF0IGNhdXNlZFxuICAgICAqIHRoZSBnYW1lIHNlcnZlciB0byBmb3JjZSBkaXNjb25uZWN0IGl0LlxuICAgICAqL1xuICAgIG1lc3NhZ2U/OiBzdHJpbmc7XG5cbiAgICAvKipcbiAgICAgKiBJZiB0aGUgZXZlbnQgb2NjdXJyZWQgYmVjYXVzZSBhIGNsaWVudCB0aW1lZCBvdXQuXG4gICAgICovXG4gICAgdGltZWRPdXQ/OiBib29sZWFuO1xufT47XG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gXFxcXFxuXG4vKiogQSBwb3NzaWJsZSBldmVudCBzZW50IGZyb20gdGhlIHNlcnZlciB0byBjbGllbnQocykuICovXG5leHBvcnQgdHlwZSBTZXJ2ZXJFdmVudFxuICAgID0gTmFtZWRFdmVudFxuICAgIHwgTG9iYmllZEV2ZW50XG4gICAgfCBTdGFydEV2ZW50XG4gICAgfCBPcmRlckV2ZW50XG4gICAgfCBSYW5FdmVudFxuICAgIHwgRGVsdGFFdmVudFxuICAgIHwgTWV0YURlbHRhRXZlbnRcbiAgICB8IEludmFsaWRFdmVudFxuICAgIHwgRmF0YWxFdmVudFxuICAgIHwgT3ZlckV2ZW50XG47XG4iXX0=